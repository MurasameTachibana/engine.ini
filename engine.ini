
[ConsoleVariables]

; =====================================================================================
; Part I: 核心渲染管線與技術棧 (Core Pipeline & Tech Stack)
; 目的：設定遊戲最基礎的渲染路徑、數據格式與核心技術啓用狀態。
; =====================================================================================
; --- 渲染路徑總開關 ---
r.RayTracing=1                                 ; 啓用光線追蹤，是Lumen和光追陰影等一切高品質效果的基礎。
r.AllowStaticLighting=0                        ; 禁用靜態烘焙光照，強制所有光影都即時計算，以獲得最佳動態效果。
r.SSR.Enable=0                                 ; 禁用傳統的螢幕空間反射(SSR)，避免與Lumen反射衝突。
r.AmbientOcclusion.Method=-1                   ; 禁用傳統的環境光遮蔽(AO)，全權由Lumen GI提供更精確自然的接觸陰影。

; --- 數據格式與精度 ---
r.SceneColorFormat=4                           ; 使用更高精度的色彩格式，減少畫面色彩斷層(Color Banding)，讓顏色過渡更平滑。
r.GBufferFormat=5                              ; 使用高精度GBuffer，為渲染提供更準確的物體表面資訊，提升光影品質。

; --- NVIDIA 技術棧 ---
r.NGX.DLSS.Enable=1                            ; 啓用NVIDIA DLSS技術，用於後續的升級或抗鋸齒。
r.NGX.DLAA.Enable=0                            ; 不強制啓用DLAA模式，由遊戲內選項(如DLSS品質)決定升級比例。
r.NGX.DLSS.BuiltInDenoiserOverride=1           ; 讓NVIDIA的AI降噪器接管光線追蹤的降噪工作，通常效果更好。
r.NGX.DLSS.DenoiserMode=1                      ; 使用光線重構(RR)技術降噪，提升光追畫質。
r.Streamline.DLSSG.RetainResourcesWhenOff=1    ; 當DLSS-G功能（DLSS Frame Generation）被關閉時，是否保留其分配的內部資源。

; =====================================================================================
; Part II: 串流系統與記憶體 (Streaming & Memory)
; 目的：實現無卡頓、無Pop-in的“預加載式”遊戲體驗。
; =====================================================================================
r.Streaming.FullyLoadUsedTextures=0            ; 禁用阻塞式加載，允許畫面在貼圖未完全加載時繼續渲染，從而消除加載型卡頓。
r.Streaming.LimitPoolSizeToVRAM=0              ; 允許手動設定VRAM池大小，而不是由引擎自動管理。
r.Streaming.PoolSize=24576                     ; 分配24GB的VRAM專門用於存放串流貼圖，以容納大量高解析度紋理。
r.Streaming.HiddenPrimitiveScale=3.0           ; 大幅提高視野外物體貼圖的保留優先級，模擬預加載，消除轉身時的Pop-in。
r.Streaming.MaxEffectiveScreenSize=2500        ; 提高引擎請求高清貼圖的積極性，讓引擎為更遠的物體請求高清貼圖，消除Pop-in。
r.Streaming.MinBoost=3.0					   ; 設定引擎在判斷是否應該提升貼圖 MIP 等級時的最小提升倍率。（貼圖細節加載的積極程度）
r.Streaming.Boost=6.0                          ; 極大地提高貼圖的加載緊迫感，讓引擎在需要時以最高優先級請求貼圖。
r.Streaming.NumStaticComponentsProcessedPerFrame=12 ; 允許CPU在一幀內為最多12個新物件準備加載請求。
r.Streaming.MaxNumTexturesToStreamPerFrame=8  ; 允許SSD在一幀內向VRAM傳輸最多8張貼圖，加快貼圖變清晰的速度。

; =====================================================================================
; Part III: 場景幾何體與LOD (Scene Geometry & Level of Detail)
; 目的：提升世界模型的細節與渲染距離，打造宏偉而細膩的遠景。
; =====================================================================================
r.ViewDistanceScale=1.5                        ; 將所有物體的渲染距離拉遠50%。
r.StaticMeshLODDistanceScale=0.5               ; 縮短靜態物體(建築、岩石)切換低精度模型的距離，讓遠景保持高細節。
foliage.CullDistanceScale=5                    ; 將植被被完全剔除(消失)的距離拉遠x倍。
foliage.LODDistanceScale=4                     ; 將植被切換低精度模型的距離拉遠x倍。
foliage.DensityType=2                          ; 使用遊戲最高品質的植被密度計算演算法。
a.URO.ForceAnimRate=1                          ; 遊戲特定 強制所有動畫都以完整幀率播放，避免遠處動畫掉幀。
r.GenerateMeshDistanceFields=1                 ; 預先計算場景的簡化模型(距離場)，是Lumen軟體光追和某些陰影技術的基礎。
r.DistanceFieldBuild.EightBit=0                ; 使用16位元儲存距離場，精度更高，能更好地表現小物體的遮蔽。
r.DistanceFieldBuild.UseEmbree=1               ; 使用Intel的Embree函式庫來加速距離場的生成過程。

; =====================================================================================
; Part IV: Lumen 全局光照 (Global Illumination)
; 目的: 實現最極致、最真實的間接光照效果。
; =====================================================================================
r.Lumen.HardwareRayTracing.Enable=1            ; 為Lumen啓用硬體光追路徑。
r.Lumen.HardwareRayTracing.Quality=4           ; 設定Lumen硬體光追的總體品質等級，4為最高。
r.Lumen.TraceMeshSDFs=0                        ; 強制Lumen的近景GI完全使用硬體光追，而非基於距離場的軟體光追。
r.Lumen.FinalGather.Quality=4                  ; Lumen最終GI效果的品質，值越高，光影過渡越平滑穩定。
r.Lumen.FinalGather.HardwareRayTracing.SamplesPerPixel=4 ; 每個像素發射4條光線來計算最終的GI，值越高，接觸陰影越柔和。
r.Lumen.SceneDetail.MeshSDF.Resolution=4       ; 提升Lumen用來理解場景的簡化模型(SDF)的解析度，改善遠景GI。
r.Lumen.SceneDetail.Card.Resolution=2048       ; 提升Lumen用來代表遠處複雜物體(如樹)的代理卡片的解析度。
r.Lumen.SceneDetail.GlobalDF.Resolution=512    ; 提升Lumen全域距離場的解析度，對遠景遮蔽的準確性至關重要。
r.Lumen.Translucency.Volume.GridPixelSize=4    ; 提升Lumen處理半透明體積(如霧)的網格精度，值越小越精細。

; =====================================================================================
; Part V: Lumen 反射 (Reflections)
; 目的: 實現最純粹、最清晰、最物理準確的反射效果。
; =====================================================================================
r.Lumen.Reflections.HardwareRayTracing=1       ; 為Lumen反射啓用硬體光追，以獲得最物理準確的倒影。
r.Lumen.Reflections.Quality=4                  ; Lumen反射的總體品質等級，4為最高。
r.Lumen.Reflections.ScreenTraces=0             ; 禁用螢幕空間追蹤，完全依賴光追來生成反射。
r.Lumen.Reflections.ScreenSpaceReconstruction=0; 禁用基於螢幕空間資訊的反射重建。
r.Lumen.Reflections.RayLightingMode=2          ; 在反射中使用最高品質的光照計算模式。
r.Lumen.Reflections.MaxRoughness=0.5           ; 只有表面粗糙度低於0.5的物體才會產生清晰的光追反射。
r.Lumen.Reflections.SmoothBias=1.5             ; 增加反射的平滑度，有助於消除噪點，但過高可能損失細節。
r.Lumen.Reflections.Temporal=1                 ; 啓用時間性累積降噪，融合多幀畫面來獲得穩定、乾淨的反射。
r.Lumen.Reflections.BilateralFilter=1          ; 啓用一種能保護物體邊緣的智慧模糊技術。
r.Lumen.Translucency.HardwareRayTracing=1      ; 為玻璃、水等半透明物體的渲染啓用硬體光追。
r.Lumen.Translucency.Reflections.HardwareRayTracing=1 ; 為半透明物體的反射啓用硬體光追。
r.Lumen.Translucency.Reflections.FrontLayer.Allow=1     ; 允許Lumen為半透明物體的最外層計算光追反射。
r.Lumen.Translucency.Reflections.FrontLayer.DownsampleFactor=1 ; 強制以全解析度計算玻璃等物體的第一層反射
r.RayTracing.Translucency.Refraction=1         ; 啓用高品質的光追折射，讓光線穿過玻璃或水時產生真實的扭曲效果。
r.RayTracing.Translucency.SamplesPerPixel=4    ; 提升光追處理半透明物體的品質，減少其表面的噪點。

; =====================================================================================
; Part VI: 陰影與半透明 (Shadows & Translucency)
; 目的: 實現像素級的柔和陰影、天空光以及物理準確的折射效果。
; =====================================================================================
r.Shadow.Quality=5                             ; 傳統陰影的總體品質等級，5為最高。
r.Shadow.RadiusThreshold=0.005				   ; 用來控制是否對光源產生陰影的門檻參數。它會根據物體在螢幕上的投影尺寸（shadow radius）來決定是否計算陰影
r.Shadow.RadiusThresholdOverrideEnable=1       ; 1=啓用。允許 r.Shadow.RadiusThreshold 的設定能夠覆蓋掉引擎或遊戲內部可能存在的、針對特定物體的更保守的剔除設定。
r.Shadow.MaxCSMResolution=2048                 ; 傳統級聯陰影貼圖(CSM)的最大解析度，影響陽光直射陰影的清晰度。
r.Shadow.CSM.MaxCascades=10                    ; 增加傳統陰影的級聯層數，讓遠景陰影的品質過渡更平滑。
r.Shadow.EnableMovingVegetationShadowing=1     ; 啓用植被投射動態陰影，能極大提升場景的立體感和真實感。
r.ContactShadows=1                             ; 啓用接觸陰影，增強物體與物體接觸縫隙處的陰影細節。
r.ContactShadows.NonShadowCastingIntensity=0.75; 讓草等本身不投射陰影的物體也能產生接觸陰影。
r.RayTracing.Shadows.SamplesPerPixel=4         ; 光追陰影的每像素採樣數，值越高，陰影邊緣越柔和、噪點越少。
r.RayTracing.SkyLight.SamplesPerPixel=4        ; 來自天空的環境光陰影的採樣數，提升陰影的整體自然感。
r.Shadow.Denoiser.TemporalAccumulation.Quality=4 ; 陰影降噪器的品質，4為最高，能有效消除陰影在運動中的閃爍。
r.Shadow.Denoiser.TemporalAccumulation.MaxHistoryFrames=16 ; 降噪器參考的歷史幀數，值越高，陰影越穩定但可能增加拖影。
r.Shadow.Denoiser.SignalBased=1                ; 啓用一種更先進的降噪演算法，能在降噪的同時更好地保留陰影細節。


r.Shadow.DistanceScale=3                       ; 傳統動態陰影(CSM)的總渲染距離
r.RayTracing.Shadows=1                         ; 確保光線追蹤陰影的總開關為啓用狀態，這是混合陰影及光追輔助功能生效的基礎。
r.RayTracing.Shadows.Lights.Point=1            ; 強制點光源(如燈籠、爆炸火花)使用計算成本更高、但效果更柔和物理準確的光追陰影。
r.RayTracing.Shadows.Lights.Spot=1             ; 強制聚光燈(如手電筒、車燈)使用光追陰影，以獲得更真實的錐形柔和陰影。
r.RayTracing.Shadows.Lights.Rect=1             ; 強制矩形光源(常用於模擬窗戶、發光面板)使用光追陰影，能產生極其自然的光源衰減和柔和邊緣。
r.RayTracing.Shadows.EnableTwoSidedGeometry=1  ; 確保單面幾何體(如旗幟、紙片)的兩面都能正確投射陰影，避免陽光直接穿透的問題。

; =====================================================================================
; Part VII: 材質、特效與後期處理 (Materials, VFX & Post-Processing)
; =====================================================================================
r.MaxAnisotropy=16                             ; 各向異性過濾等級，16為最高，能讓斜視角度的貼圖保持清晰。
r.TextureMipBias.Offset=-0.5                   ; 調整貼圖的清晰度，負值更銳利，但過高可能導致閃爍。
r.MaterialQualityLevel=1                       ; 遊戲特定 設定遊戲自訂的材質品質等級。
r.Tonemapper.Sharpen=0.5                       ; 為最終畫面施加的銳化強度。
r.TonemapperFilm=0                             ; 禁用模擬電影膠片的色調映射曲線。
r.Tonemapper.EnableLocalTonemapping=1          ; 啓用局部色調映射，能在高對比場景中保留更多亮部和暗部細節。
r.DepthOfFieldQuality=4                        ; 景深效果的品質，4為最高。
r.UsePreFilteredDOF=1                          ; 啓用一種效果更好、更平滑的景深演算法。
r.BloomQuality=5                               ; 亮部泛光(輝光)效果的品質，5為最高。
r.LightShaftQuality=3                          ; 體積光(穿過窗戶或樹林的光束)的品質，3為最高。
r.SkyAtmosphere=1                              ; 啓用程式化的天空與大氣系統。
r.SkyAtmosphere.MultiScatteringLUT.HighQuality=1 ; 啓用高品質的多重散射計算，讓大氣光照更真實。
r.VolumetricFog.GridPixelSize=4                ; 體積霧的渲染精度，值越小，霧氣越細膩。
r.VolumetricFog.HighQuality=1                  ; 啓用高品質的體積霧渲染模式。
r.HairStrands.SkyAO=1                          ; 讓毛髮能接收來自天空的環境光遮蔽。
r.HairStrands.SkyLighting=1                    ; 讓毛髮能接收來自天空的光照。

; =====================================================================================
; Part VIII: 效能與非同步計算 (Performance & Async Compute)
; =====================================================================================
r.ShaderPipelineCache.Enabled=1                ; 啓用已編譯著色器的快取(PSO)，消除因首次遇到新特效而產生的編譯卡頓。
r.UseShaderPredraw=1                           ; 在遊戲啓動時預先繪製一部分著色器，理論上可以減少首次卡頓。
niagara.CreateShadersOnLoad=1                  ; 在加載關卡時就編譯Niagara特效的著色器。
D3D12.PSO.DriverOptimizedDiskCache=1           ; DX12特定 利用顯示卡驅動程式來優化PSO快取的存儲和讀取。
r.Shaders.Optimize=1                           ; 啓用引擎的著色器編譯優化。
tick.AllowAsyncTickCleanup=1                   ; 允許在非同步執行緒上執行一些清理工作，分散CPU主執行緒負擔。
tick.AllowAsyncTickDispatch=1                  ; 允許在非同步執行緒上分發任務。
FX.BatchAsync=1                                ; 允許非同步地對特效進行批次處理。
FX.EarlyScheduleAsync=1                        ; 允許更早地調度非async特效任務，以更好地利用多核心CPU。
r.Lumen.Reflections.AsyncCompute=1             ; 允許Lumen反射在非同步計算佇列上進行，與主渲染任務並行。
r.Lumen.DiffuseIndirect.AsyncCompute=1         ; 允許Lumen GI在非同步計算佇列上進行，理由同上。
HISMBatcher.Enabled=1                          ; 啓用HISM自動批次處理，能極大優化擁有大量重複物體(如森林、建築)場景的CPU效能。
HISMBatcher.MaxPoolSize=32768                  ; 為HISM批處理器分配32MB的内存預算。
r.RayTracing.Geometry.Landscape.DetectTextureStreaming=1 ; 1=啓用。命令光追系統去偵測地形貼圖的串流狀態
r.raytracing.PreBuildLightGrid=1                         ; 1=啓用。在渲染前，預先構建一個用於光追的全域光照網格(Light Grid)。輕微增加場景加載時間，但在擁有多個動態光源的場景中，能顯著提升光追的運行時效能。
r.RayTracing.Geometry.InstancedStaticMeshes.Culling=0    ; 0=禁用剔除。強制將所有實例化的靜態網格體(如程序化生成的森林、石塊群)都納入光追加速結構的構建。遠處或視野外的實例也能被正確地反射或投射陰影，代價是更高的VRAM佔用和BVH構建成本。
r.RayTracing.Geometry.Landscape.LODsUpdateEveryFrame=1   ; 1=每幀更新。强制地形的光追幾何體模型在每一幀都與其視覺LOD(細節層級)保持同步。解決在快速移動(如飛行、駕車)時，因地形LOD快速變化而導致的陰影或反射的視覺瑕疵。
; =====================================================================================
r.RayTracing.GatherStatic=1                    ; 1=啓用。命令引擎在場景加載時，預先收集所有靜態網格體的幾何資訊並一次性構建頂層加速結構(TLAS)。稍微增加初始加載時間，極大提升運行時的光追效能和穩定性，減少因動態構建BVH引起的卡頓。
r.RayTracing.PSOCacheSize=512                  ; 設定光追著色器管線物件(RTPSO)在記憶體中的快取大小，單位為MB。一個較大的值(如512MB)可以容納更多預編譯的光追著色器，顯著減少在遊戲中首次遇到新的光追效果時，因即時編譯引起的卡頓。
r.RayTracing.CacheShaderRecords=1              ; 1=啓用。快取著色器綁定表(Shader Binding Table, SBT)中的記錄。這是一項重要的CPU端優化，能避免在大型場景中為每個物體重複生成SBT記錄，可顯著提升CPU性能，降低繪製調用的開銷。
r.RayTracing.AsyncBuild=1                      ; 1=啓用。允許光線追蹤的加速結構(Acceleration Structures, BVH)在非同步計算佇列上進行構建。這能將繁重的BVH構建工作從主渲染執行緒中剝離，與其他渲染任務並行，從而提升整體的流暢度和幀率。
r.RayTracing.CompileMaterialAHS=1              ; 1=啓用。為所有支援光追的材質，強制編譯任意命中著色器(Any-Hit Shader)。正確渲染帶有複雜透明/鏤空效果的材質(如樹葉、鎖鏈、柵欄)
r.RayTracing.CompileMaterialCHS=1              ; 1=啓用。為所有支援光追的材質，強制編譯最近命中著色器(Closest-Hit Shader)。這是所有不透明物體進行光線追蹤的基礎，是保證光追能正常運作的必要條件，必須啓用。
r.RayTracing.Culling.Radius=10000              ; 基於半徑的實例剔除。10000=100米。
r.raytracing.CachedStaticMeshWPORTCmd=1        ; 1=啓用。快取帶有世界位置偏移的靜態網格體的光追命令。能極大提升帶有動畫效果的植被(如風中搖曳的樹木和草地)的渲染效率，避免在這些場景中出現效能驟降。
; =====================================================================================
; Part IX: 遊戲特定與可能無效項
; =====================================================================================
r.Kuro.InteractionEffect.UseCppWaterEffect=1   ; 遊戲特定 使用C++版本的水體特效。
r.Streaming.UsingNewKuroStreaming=1            ; 遊戲特定 啓用開發者自訂的、可能更高效的串流系統。
r.Kuro.SkeletalMesh.LODDistanceScale=10000     ; 遊戲特定 鎖定角色和怪物的最高細節模型，避免其在遠處降級。
r.Kuro.GlobalLightQuality=4                    ; 遊戲特定 設定遊戲自訂的全域光照品質等級。
r.KuroMaterialQualityLevel=1                   ; 遊戲特定 。
r.Kuro.FlickerLightActorTickFactor=1.0         ; 遊戲特定 閃爍光源(Flicker Light)的更新頻率

r.AntiAliasingMethod=4                         ; 抗鋸齒方法，4為TSR。(當DLSS啓用時，此項由DLSS接管)
r.TSR.History.SampleCount=32                   ; [使用DLSS，故爲無效項]TSR參考的歷史幀樣本數，值越高，抗鋸齒效果越穩定。
r.TSR.History.UpdateQuality=4                  ; [使用DLSS，故爲無效項]TSR更新歷史資訊的品質，4為最高。
;r.RayTracing.Shadows.Hybrid=0                 ; 已禁用 經測試在該遊戲中會引發錯誤。
;r.Shadow.FilterMethod=1                       ; [啓用會造成太陽光錯誤，故註解禁用]啓用PCSS高級陰影濾波技術。
;r.raytracing.PreBindSBT=1                     ; [啓用會造成光追全黑，故註解禁用]1=啓用。預先綁定著色器綁定表(Shader Binding Table, SBT)。這是一項底層的驅動程式優化，能減少運行時的CPU開銷，有助於提升整體流暢度
;r.raytracing.RaytracingSkeletalMeshIgnoreWPO=0           ;[會造成露帕無法使用，故註解禁用] 0=不忽略。強制光追系統考慮骨骼網格體的世界位置偏移。渲染帶有複雜動畫(如布料飄動、呼吸起伏)的角色，能避免光影與模型“脫節”。

r.DynamicGlobalIllumination.Method=1           ; [似乎會被覆蓋，是否有設置並無影響]啓用Lumen以實現即時的全局光照(GI)，讓光線能自然反彈。
r.ReflectionMethod=2                           ; [似乎會被覆蓋，是否有設置並無影響]啓用Lumen以提供物理準確的反射，取代傳統的螢幕空間反射。
r.Lumen.GlobalIllumination.IndirectLightingScale=2.0 ; [經測試爲無效項]全域光照亮度倍率。
r.Lumen.EmissiveLight.IntensityScale=2.5       ; 增強霓虹燈、魔法特效等自發光物體對周圍環境的照亮強度。
r.Lumen.HardwareRayTracing.MaxBounces=4        ; [應被硬性鉗制上限爲1]設定間接光在場景中反彈的最大次數，值越高，場景越通透明亮。
r.Lumen.Reflections.HardwareRayTracing.MaxBounces=4 ; [應被硬性鉗制上限爲1]設定反射光線的最大反彈次數，值大於等於2才能實現「鏡中鏡」效果。
r.Shadow.CSMUsePCHighConfig=1                  ; 1=啓用。強制級聯陰影(CSM)使用PC平台的高品質設定集。

p.ClothPhysics.SolverFrequency=120.0           ; 將布料物理的模擬頻率提升至120Hz。
p.ClothPhysics.Substeps=4                      ; 在每幀之間進行4次物理次步進。
p.ClothPhysics.NumIterations=10                ; 每次物理計算進行10輪自我修正。
r.Materials.EnableSubstrate=1				   ; 測試
r.SSFS=1
r.SSFS.PassAmount=10

;寫法不同，保險用不一定需要
r.Lumen.TranslucencyHardwareRayTracing=1
r.Lumen.TranslucencyReflections.HardwareRayTracing=1  ; (寫法) 為半透明物體的反射啟用硬體光追。
r.Lumen.TranslucencyReflections.FrontLayer.Allow=1		; (寫法) 允許Lumen為半透明物體的最外層計算光追反射。
r.Lumen.TranslucencyReflections.FrontLayer.DownsampleFactor=1 ; (寫法) 強制以全解析度計算玻璃等物體的第一層反射
r.RayTracing.TranslucencyRefraction=1         ; （寫法）啓用高品質的光追折射，讓光線穿過玻璃或水時產生真實的扭曲效果。
r.RayTracing.TranslucencySamplesPerPixel=4    ; （寫法）提升光追處理半透明物體的品質，減少其表面的噪點。

[/Script/Engine.RendererSettings]
r.RayTracing.LoadConfig=1
